version: "3.9"

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: pop
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: pop
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:RELEASE.2024-04-06T05-26-02Z
    command: server /data --console-address ":9001"
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  api:
    build:
      context: ../apps/api
    env_file:
      - ../.env.example
    environment:
      PG_HOST: postgres
      PG_PORT: 5432
      S3_ENDPOINT: http://minio:9000
      PUBLIC_API_URL: http://api:8080
      S3_REGION: auto
      NOSTR_ENABLED: "false"
      RUN_DB_MIGRATIONS: "1"
      RUN_SIMPLE_MVP_SEED: "1"
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - minio
    healthcheck:
      test: [
        "CMD-SHELL",
        "python -c \"import urllib.request; urllib.request.urlopen('http://127.0.0.1:8080/health')\""
      ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  web:
    image: node:20-alpine
    working_dir: /app
    environment:
      API_URL: http://api:8080
      NEXT_PUBLIC_API_URL: http://localhost:8080
      NEXT_PUBLIC_NOSTR_ENABLED: "false"
      NEXT_TELEMETRY_DISABLED: "1"
    command: sh -c "corepack enable && pnpm install && pnpm dev"
    volumes:
      - ../apps/web:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - api

  web-prod:
    profiles:
      - prod
    build:
      context: ../apps/web
      args:
        NEXT_PUBLIC_API_URL: http://localhost:8080
        NEXT_PUBLIC_NOSTR_ENABLED: "false"
    environment:
      API_URL: http://api:8080
      NEXT_PUBLIC_API_URL: http://localhost:8080
      NEXT_PUBLIC_NOSTR_ENABLED: "false"
      NEXT_TELEMETRY_DISABLED: "1"
    ports:
      - "3000:3000"
    depends_on:
      - api

volumes:
  postgres_data:
  minio_data:
